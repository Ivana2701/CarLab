@model CarLab.Models.CommonEntities.BasicDataModel
@{
    ViewData["Title"] = "Car Listing";
    Layout = "~/Views/Shared/_LayoutCustomer.cshtml";
}

    <!-- Page Title
        ============================================= -->
        <section id="page-title" class="page-title-parallax page-title-dark" style="background-image: url('/themeContent/customer/demos/car/images/hero-slider/4.jpg'); background-size: cover; padding: 120px 0;" data-bottom-top="background-position:0px 0px;" data-top-bottom="background-position:0px -300px;">

            <div class="container clearfix">
                <h1>Car Listing</h1>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item"><a href="#">Cars</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Listing</li>
                </ol>
            </div>

        </section><!-- #page-title end -->


<!-- Content
        ============================================= -->
        <section id="content">
            <div class="content-wrap pt-0" style="overflow: visible;">


                <div class="section m-0 pt-0 bg-transparent">
                    <div class="container">

                        <!-- Grid Filter
                        ============================================= -->
                        <ul class="grid-filter style-2 w-100" data-container="#portfolio">




                    @{
                        if (Model != null && Model.MakesList != null && Model.MakesList.Count > 0)
                        {
                            Model.MakesList = Convert.ToInt32(ViewBag.MakeID) > 0 ? (Model.MakesList.Where(m => m.MakeID == Convert.ToInt32(ViewBag.MakeID)).ToList()) : (Model.MakesList);

                            foreach (var item in Model.MakesList)
                            {
                               <li><a href="#" onclick="GetProductsListByFilter('@item.MakeID')" data-filter=""><i class="icon-car-cuv"></i><span>@item.MakeName</span></a></li>
                            }
                        }
                    }



                            <!-- Show All Button -->
                            <li class=" ms-auto"><a class="button button-small button-rounded button-reset" href="@Url.Action("CarsList", "CustomerHome")" data-filter="*">Show All</a></li>


                        </ul><!-- .grid-filter end -->

                        <!-- Portfolio Items
                        ============================================= -->
                       @*  <div id="portfolio" class="portfolio row gutter-30 grid-container products-list-row" data-layout="fitRows">*@
                         <div id="portfolio" class="portfolio row gutter-30  products-list-row" data-layout="fitRows">


                    @{
                        if (Model != null && Model.productsList != null && Model.productsList.Count > 0)
                        {
                           
                            foreach (var item in Model.productsList)
                            {
                                 <article class="portfolio-item col-12 col-sm-6 col-md-4">
                                    <div class="grid-inner">
                                        <div class="portfolio-image">
                                            <a href="#"  onclick="ShowProductDetail('@item.ProductID')">

                                                @if (item.ProductImage != null)
                                                {
                                                    string bitString = BitConverter.ToString(item.ProductImage);
                                                    if (bitString == "00" || bitString == "")
                                                    {
                                                       
                                                         <img src="~/themeContent/customer/demos/car/images/filter-cars/1.jpg" alt="Open Imagination">
                                                    }
                                                    else
                                                    {
                                                        string imageBase64Data = Convert.ToBase64String(item.ProductImage);
                                                        string imageDataURL = string.Format("data:image/jpg;base64,{0}", imageBase64Data);

                                                         <img src="@imageDataURL" alt="Open Imagination">
                                                    }
                                                }
                                                else
                                                {
                                                     <img src="~/themeContent/customer/demos/car/images/filter-cars/1.jpg" alt="Open Imagination">
                                                }

                                               


                                                <div class="filter-p-pricing">
                                                    <span class="p-price fw-bold ls1">$@item.Price</span>
                                                  
                                                </div>
                                            </a>
                                        </div>
                                        <div class="portfolio-desc">
                                            <h3><a href="#" onclick="ShowProductDetail('@item.ProductID')">@item.ProductName</a></h3>
                                            <span>

                                                @{
                                                    item.Description = String.IsNullOrWhiteSpace(item.Description) ? "" : (item.Description.Substring(0, item.Description.Length>100 ? 100 : item.Description.Length));
                                                    item.Description = item.Description.Length > 99 ? (item.Description + "...") : item.Description;
                                                }
                                                 @item.Description
                                            </span>
                                        </div>
                                        <div class="row g-0 car-p-features font-primary clearfix">
                                            
                                            <div class="col-lg-4 col-6 p-0"><i class="icon-car-door"></i><span> @item.Seats Seater</span></div>
                                       

                                            <div class="col-lg-4 col-6 p-0"><i class="icon-car-signal"></i><span> @(String.IsNullOrWhiteSpace(item.TransmissionType) ? "Autometic" : item.TransmissionType)</span></div>
                                          
                                            <div class="col-lg-4 col-6 p-0"><i class="icon-car-care"></i><span> @item.ProductYear</span></div>
                                        </div>
                                    </div>
                                </article>

                            }
                        }
                        else
                        {
                              <article class="portfolio-item col-12 col-sm-6 col-md-4">
                                    <div class="grid-inner">
                                        <h3>No Data found</h3>
                                    </div>
                                </article>

                        }
                    }

                          


                        </div>
                    </div>
                </div>

                <div class="section center nbottomomargin mt-3 footer-stick" style="padding:80px 0 ">
                    <div class="container clearfix">
                        <h3 class="font-primary">Special Offers on Villa Long Term Rentals &amp; Lease Agreements</h3>
                        <a href="@Url.Action("ContactUs","CustomerHome")" class="button button-color button-large button-rounded">Contact Now</a>
                    </div>
                </div>
            </div>
        </section><!-- #content end -->


<div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
</div>


@section  Scripts{

    <script>


        		function ShowProductDetail(ProductID) {



			if(!checkIfStringIsEmtpy(ProductID) || ProductID==0){
				event.preventDefault();
				toastr.error('Please select category!');
				return false;
			}


			let searchFormData = {
				ProductID: ProductID,

			}

			var Url = '@Url.Action("GetProductDetail", "CustomerHome")';

			$.ajax({
			type: "GET",
			url: Url,

			data: searchFormData,
			// datatype: "json",
			cache: false,
			async: false,

			success: function (data) {

				$('.bs-example-modal-lg').html(data);
				$('.bs-example-modal-lg').modal('show');


			},
				error: function (xhr, ajaxOptions, thrownError) {
					toastr.error('An error occured. Please try again!');

				}
			})
		}

                function GetProductsListByFilter(CarMakeID) {

                    console.log(CarMakeID);
                    let MakeID= CarMakeID;
                    let ModelID= '@(ViewBag.ModelID==null ? 0 : Convert.ToInt32(ViewBag.ModelID))';
                    let LocationID= '@(ViewBag.LocationID==null ? 0 : Convert.ToInt32(ViewBag.LocationID))';
                    let ColorID= '@(ViewBag.ColorID==null ? 0 : Convert.ToInt32(ViewBag.ColorID))';
                    let ProductYear = '@(ViewBag.ProductYear == null ? 0 : Convert.ToString(ViewBag.ProductYear))';

           
                    console.log(ProductYear);

                

                    if(!checkIfStringIsEmtpy(MakeID) || MakeID<1){
                        event.preventDefault();
                          toastr.error('Please select make!');
                          return false;
                    }


                let searchFormData = {
                   MakeID: MakeID,
                   ModelID: ModelID,
                   LocationID: LocationID,
                   ColorID: ColorID,
                   ProductYear: ProductYear,

               }

                    var Url = '@Url.Action("GetProductsListByFilter", "CustomerHome")';

                  $.ajax({
                      type: "GET",
                      url: Url,

                      data: searchFormData,
                      // datatype: "json",
                      cache: false,
                      async: false,

                      success: function (data) {

                          $('.products-list-row').html(data);


                      },
                      error: function (xhr, ajaxOptions, thrownError) {
                            toastr.error('An error occured. Please try again!');

                      }
                  })
              }



   function AddToCart(ProductID){

       var grandTotal = window.sharedVariable;

            console.log(grandTotal);
       @{
           int? CustomerUserID = sessonContext.HttpContext.Session.GetInt32("CustomerUserID");
           string IsUserLogin = "No";
           if (CustomerUserID!=null && CustomerUserID>0)
           {
               IsUserLogin="Yes";
           }
       }

       let IsUserLoginJavaScript = '@IsUserLogin';
       if(IsUserLoginJavaScript=='No'){
            toastr.error('Please login first before booking!');

             setTimeout(function () {
                           location.href = "@Url.Action("LoginRegisterAccount", "CustomerAuthentication")";
                   }, 1000);

            return false;
       }

          if(!checkIfStringIsEmtpy(ProductID) || ProductID==0){
                        event.preventDefault();
                          toastr.error('Incorrect product id!');
                          return false;
                    }


                     let searchFormData = {
                   ProductID: ProductID,
                   grandTotal: grandTotal,
               }

                     

                    var Url = '@Url.Action("AddItemToCart", "CustomerHome")';

                  $.ajax({
                      type: "GET",
                      url: Url,

                      data: searchFormData,
                      // datatype: "json",
                      cache: false,
                      async: false,

                      success: function (data) {

                          if(data.success){
                                toastr.success(data.message);
                                $('.top-cart-number').html(data.totalCartItems);


                                setTimeout(function () {
                                     $('.bs-example-modal-lg').modal('hide');
                                }, 1000);
                               

                          }else{
                               toastr.warning(data.message);
                          }




                      },
                      error: function (xhr, ajaxOptions, thrownError) {
                            toastr.error('An error occured. Please try again!');

                      }
                  })
    }

    </script>


}




